2023-07-21 17:52:21	947abfa3-89b7-44d0-a397-b343d6d390af	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "xb@test.com",
           name: "Ralph",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 18:59:43	970db92f-c3f7-44bb-a958-f09322f5d3ea	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "xb@test.com",
           name: "Ralph",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 19:04:02	227e3b02-3b96-4d6f-a891-69fc3602fb6a	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "yb@test.com",
           name: "Tina",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 19:05:18	ecb8f90a-2322-4639-90d4-8ff7ad6e3c16	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "yb@test.com",
           name: "Tina",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 19:05:52	1e5311fe-3b9e-47da-90af-5751f34e1277	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "yb@test.com",
           name: "Tina",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 19:07:53	474eeb5e-a1a1-4ab8-a0b4-c8f21c9b36b5	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "yb@test.com",
           name: "Tina",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 19:10:04	6706b68a-e8f3-4efd-a21b-e2e8700a08a3	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "yb@test.com",
           name: "Tina",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 19:11:00	1bdb68d9-bf49-46c2-bd43-3a48cd3d10d1	PrismaClientValidationError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:23:37

  20 const createUser = async (user: CreateUserRequest) => {
  21   const hashedPassword = await bcrypt.hash(user.password, 10);
  22 
→ 23   const newUser = await prisma.user.create({
         data: {
           email: "yb@test.com",
           name: "Tina",
       +   password: String
         }
       })

Argument `password` is missing.
2023-07-21 20:09:07	5196333f-637b-48a3-8382-9f2815f3df66	PrismaClientKnownRequestError: 
Invalid `prisma.user.create()` invocation in
D:\dev\voltvector\voltvector-be\src\user\user.service.ts:33:37

  30 const createUser = async (user: CreateUserRequest) => {
  31   const hashedPassword = await bcrypt.hash(user.password, 10);
  32 
→ 33   const newUser = await prisma.user.create(
Unique constraint failed on the fields: (`email`)
